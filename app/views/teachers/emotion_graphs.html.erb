<% provide(:title, '円グラフ') %>
<div class="emotion-graphs-container">
  <h1 class="emotion-graphs-title">回答の分布 - <%= @grade_class.grade %>年<%= @grade_class.class_num %>組</h1>

  <div class="emotion-graphs-tabs">
    <button class="emotion-graphs-tablink" onclick="openTab(event, 'daily')">日別</button>
    <button class="emotion-graphs-tablink" onclick="openTab(event, 'monthly')">月別</button>
    <button class="emotion-graphs-tablink" onclick="openTab(event, 'overall')">統計</button>
  </div>

  <div id="daily" class="emotion-graphs-tabcontent" style="display:none;">
    <div class="navigation-buttons">
      <p>表示日付: <%= @date %></p>
      <% if @previous_date %>
        <%= link_to '前日', emotion_graphs_path(@grade_class.id, date: @previous_date, type: 'daily', tab: 'daily'), class: 'prev-day' %>
      <% end %>
      <% if @next_date %>
        <%= link_to '翌日', emotion_graphs_path(@grade_class.id, date: @next_date, type: 'daily', tab: 'daily'), class: 'next-day' %>
      <% end %>
    </div>
    <h2 class="emotion-graphs-tab-title">本日の分布</h2>
    <div class="emotion-graphs-chart-row">
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">学校は、楽しかったですか？</h3>
        <canvas class="emotion-graphs-canvas" id="dailyQuestion1Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">勉強は、よく分かりましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="dailyQuestion2Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">休み時間は、楽しく遊べましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="dailyQuestion3Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">給食は、残さず食べられましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="dailyQuestion4Chart" width="400" height="400"></canvas>
      </div>
    </div>
  </div>

  <div id="monthly" class="emotion-graphs-tabcontent" style="display:none;">
    <div class="navigation-buttons">
      <p>表示月: <%= @date.strftime('%Y-%m') %></p>
      <% if @previous_date %>
        <%= link_to '先月', emotion_graphs_path(@grade_class.id, date: @previous_date, type: 'monthly', tab: 'monthly'), class: 'prev-month' %>
      <% end %>
      <% if @next_date %>
        <%= link_to '翌月', emotion_graphs_path(@grade_class.id, date: @next_date, type: 'monthly', tab: 'monthly'), class: 'next-month' %>
      <% end %>
    </div>
    <h2 class="emotion-graphs-tab-title">今月の分布</h2>
    <div class="emotion-graphs-chart-row">
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">学校は、楽しかったですか？</h3>
        <canvas class="emotion-graphs-canvas" id="monthlyQuestion1Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">勉強は、よく分かりましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="monthlyQuestion2Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">休み時間は、楽しく遊べましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="monthlyQuestion3Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">給食は、残さず食べられましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="monthlyQuestion4Chart" width="400" height="400"></canvas>
      </div>
    </div>
  </div>

  <div id="overall" class="emotion-graphs-tabcontent" style="display:none;">
    <h2 class="emotion-graphs-tab-title">統計</h2>
    <div class="emotion-graphs-chart-row">
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">学校は、楽しかったですか？</h3>
        <canvas class="emotion-graphs-canvas" id="overallQuestion1Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">勉強は、よく分かりましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="overallQuestion2Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">休み時間は、楽しく遊べましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="overallQuestion3Chart" width="400" height="400"></canvas>
      </div>
      <div class="emotion-graphs-chart-container">
        <h3 class="emotion-graphs-chart-title">給食は、残さず食べられましたか？</h3>
        <canvas class="emotion-graphs-canvas" id="overallQuestion4Chart" width="400" height="400"></canvas>
      </div>
    </div>
  </div>
</div>

<script>
  function openTab(evt, tabName) {
    console.log("openTab called with tabName:", tabName);
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("emotion-graphs-tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("emotion-graphs-tablink");
    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";

    // スクロール位置を調整
    var headerOffset = 70; // ヘッダーの高さを調整
    var elementPosition = document.getElementById(tabName).offsetTop;
    var offsetPosition = elementPosition - headerOffset;

    window.scrollTo({
      top: offsetPosition,
      behavior: 'smooth'
    });

    renderCharts();
  }

  function renderCharts() {
    console.log("renderCharts called");
    var dailyCtx1 = document.getElementById('dailyQuestion1Chart').getContext('2d');
    var dailyCtx2 = document.getElementById('dailyQuestion2Chart').getContext('2d');
    var dailyCtx3 = document.getElementById('dailyQuestion3Chart').getContext('2d');
    var dailyCtx4 = document.getElementById('dailyQuestion4Chart').getContext('2d');

    var monthlyCtx1 = document.getElementById('monthlyQuestion1Chart').getContext('2d');
    var monthlyCtx2 = document.getElementById('monthlyQuestion2Chart').getContext('2d');
    var monthlyCtx3 = document.getElementById('monthlyQuestion3Chart').getContext('2d');
    var monthlyCtx4 = document.getElementById('monthlyQuestion4Chart').getContext('2d');

    var overallCtx1 = document.getElementById('overallQuestion1Chart').getContext('2d');
    var overallCtx2 = document.getElementById('overallQuestion2Chart').getContext('2d');
    var overallCtx3 = document.getElementById('overallQuestion3Chart').getContext('2d');
    var overallCtx4 = document.getElementById('overallQuestion4Chart').getContext('2d');

    var dailyQuestion1Data = <%= @daily_graphs[:question1].to_json.html_safe %>;
    var dailyQuestion2Data = <%= @daily_graphs[:question2].to_json.html_safe %>;
    var dailyQuestion3Data = <%= @daily_graphs[:question3].to_json.html_safe %>;
    var dailyQuestion4Data = <%= @daily_graphs[:question4].to_json.html_safe %>;

    var monthlyQuestion1Data = <%= @monthly_graphs[:question1].to_json.html_safe %>;
    var monthlyQuestion2Data = <%= @monthly_graphs[:question2].to_json.html_safe %>;
    var monthlyQuestion3Data = <%= @monthly_graphs[:question3].to_json.html_safe %>;
    var monthlyQuestion4Data = <%= @monthly_graphs[:question4].to_json.html_safe %>;

    var overallQuestion1Data = <%= @overall_graphs[:question1].to_json.html_safe %>;
    var overallQuestion2Data = <%= @overall_graphs[:question2].to_json.html_safe %>;
    var overallQuestion3Data = <%= @overall_graphs[:question3].to_json.html_safe %>;
    var overallQuestion4Data = <%= @overall_graphs[:question4].to_json.html_safe %>;

    function formatDataForPieChart(data, questionNum) {
      console.log("formatDataForPieChart called with questionNum:", questionNum);
      var labels;
      switch (questionNum) {
        case 1:
        case 3:
          labels = ['とても たのしかった', 'たのしかった', 'すこしだけ たのしかった', 'たのしくなかった'];
          break;
        case 2:
          labels = ['とても よくわかった', 'よくわかった', 'すこしだけ わかった', 'ぜんぜん わからなかった'];
          break;
        case 4:
          labels = ['ぜんぶたべて おかわりもした', 'ぜんぶたべた', 'へらしたけれど ぜんぶたべた', 'のこしてしまった'];
          break;
      }
      var backgroundColors = ['#FF6384', '#4BC0C0', '#FFCE56', '#36A2EB'];

      var counts = [data[4] || 0, data[3] || 0, data[2] || 0, data[1] || 0];
      var total = counts.reduce((a, b) => a + b, 0);
      var percentages = counts.map(count => (count / total * 100).toFixed(1) + '%');

      return {
        labels: labels,
        datasets: [{
          data: counts,
          backgroundColor: backgroundColors,
          borderWidth: 1,
          borderColor: '#ffffff',
          hoverBorderColor: '#000000',
        }],
        percentages: percentages
      };
    }

    function createChart(ctx, data, questionNum) {
      console.log("createChart called with questionNum:", questionNum);
      var formattedData = formatDataForPieChart(data, questionNum);
      return new Chart(ctx, {
        type: 'pie',
        data: {
          labels: formattedData.labels,
          datasets: formattedData.datasets
        },
        options: {
          tooltips: {
            callbacks: {
              label: function(tooltipItem, data) {
                var label = data.labels[tooltipItem.index];
                var value = data.datasets[0].data[tooltipItem.index];
                var percentage = formattedData.percentages[tooltipItem.index];
                return label + ': ' + value + ' (' + percentage + ')';
              }
            }
          },
          animation: {
            animateScale: true,
            animateRotate: true
          }
        }
      });
    }

    console.log("Creating daily charts");
    createChart(dailyCtx1, dailyQuestion1Data, 1);
    createChart(dailyCtx2, dailyQuestion2Data, 2);
    createChart(dailyCtx3, dailyQuestion3Data, 3);
    createChart(dailyCtx4, dailyQuestion4Data, 4);

    console.log("Creating monthly charts");
    createChart(monthlyCtx1, monthlyQuestion1Data, 1);
    createChart(monthlyCtx2, monthlyQuestion2Data, 2);
    createChart(monthlyCtx3, monthlyQuestion3Data, 3);
    createChart(monthlyCtx4, monthlyQuestion4Data, 4);

    console.log("Creating overall charts");
    createChart(overallCtx1, overallQuestion1Data, 1);
    createChart(overallCtx2, overallQuestion2Data, 2);
    createChart(overallCtx3, overallQuestion3Data, 3);
    createChart(overallCtx4, overallQuestion4Data, 4);
  }

  document.addEventListener('DOMContentLoaded', function() {
    console.log("DOMContentLoaded event fired");

    // URLのパラメータからタブ情報を取得し、適切なタブを開く
    const urlParams = new URLSearchParams(window.location.search);
    const tab = urlParams.get('tab') || 'daily';
    openTab({ currentTarget: document.querySelector(`.emotion-graphs-tablink[onclick="openTab(event, '${tab}')"]`) }, tab);
  });
</script>
